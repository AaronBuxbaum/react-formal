{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useFieldArray","result":{"data":{"docpocalypse":{"id":"55399b22-e38d-5a27-b620-db5572421709","tsType":null,"type":"hook","name":"useFieldArray","packageName":"react-formal","importName":"import { useFieldArray } from 'react-formal'","tags":[{"name":"param","value":"A field path, should point to an array value in the form data"},{"name":"param","value":"A field path, should point to an array value in the form data"}],"example":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useFieldArray\"), \" hook is an alternative to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FieldArray\"), \" component. Its\\nAPI if similar and accepts all the same options as the component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import * as yup from \\\"yup\\\";\\nimport useFieldArray from \\\"react-formal/useFieldArray\\\";\\nimport Form from \\\"../components/FormWithResult\\\";\\nimport IconButton from \\\"../components/IconButton\\\";\\n\\nlet cid = 0;\\nconst friend = yup.object({\\n  id: yup.number().default(() => cid++),\\n  name: yup\\n    .string()\\n    .required(\\\"Required\\\")\\n    .default(\\\"\\\")\\n});\\n\\nconst schema = yup.object({\\n  friends: yup\\n    .array()\\n    .of(friend)\\n    .min(1, \\\"Must have at least one friend\\\")\\n    .max(4, \\\"That is too many friends\\\")\\n});\\n\\nfunction FriendsList({ name }) {\\n  const [values, arrayHelpers, meta] = useFieldArray(name);\\n  return (\\n    <>\\n      <ul>\\n        {values.map((value, idx) => (\\n          <li key={value.id}>\\n            <div className=\\\"flex items-start\\\">\\n              <Form.Field name={`${name}[${idx}].name`} />\\n              <IconButton\\n                aria-label=\\\"Remove item\\\"\\n                onClick={() => arrayHelpers.remove(value)}\\n              >\\n                -\\n              </IconButton>\\n              <IconButton\\n                aria-label=\\\"Insert item\\\"\\n                onClick={() => arrayHelpers.insert(friend.default(), idx + 1)}\\n              >\\n                +\\n              </IconButton>\\n            </div>\\n            <Form.Message\\n              for={`${name}[${idx}].name`}\\n              className=\\\"error -mt-2\\\"\\n            />\\n          </li>\\n        ))}\\n      </ul>\\n      {!values.length && (\\n        <button onClick={() => arrayHelpers.push({ id: ++cid })}>\\n          Add Friend\\n        </button>\\n      )}\\n    </>\\n  );\\n}\\n\\n<Form\\n  debug\\n  schema={schema}\\n  defaultValue={{\\n    friends: [\\n      { id: ++cid, name: \\\"Sally\\\" },\\n      { id: ++cid, name: \\\"\\\" }\\n    ]\\n  }}\\n>\\n  <Form.Message for={`friends`} className=\\\"error\\\" />\\n  <FriendsList name=\\\"friends\\\" />\\n</Form>;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"signatures":[{"kind":"function","name":"useFieldArray","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Retrieve the values at a given path as well as a set of array helpers\\nfor manipulating list values.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ContactList() {\\n  const [values, arrayHelpers, meta] = useFieldArray(\\\"contacts\\\")\\n\\n  return (\\n    <ul>\\n      {values.map((value, idx) => (\\n         <li key={value.id}>\\n           <Form.Field name={`contacts[${idx}].name`} />\\n\\n           <button onClick={() => arrayHelpers.remove(value)}>\\n             Remove\\n           </button>\\n         </li>\\n       )}\\n    </ul>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"name","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A field path, should point to an array value in the form data\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":"string","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"T","typeDef___NODE":null}]},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"FieldArrayHelpers","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"T","typeDef___NODE":null}]},{"type":"NameExpression","name":"FieldMeta","typeDef___NODE":null}],"expression":null,"applications":null}}],"members":{"static":null}},{"kind":"function","name":"useFieldArray","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Retrieve the values at a given path as well as a set of array helpers\\nfor manipulating list values.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ContactList() {\\n  const [values, arrayHelpers, meta] = useFieldArray({\\n    name: 'contacts',\\n    validates: 'otherField'\\n  })\\n\\n  return (\\n    <ul>\\n      {values.map((value, idx) => (\\n         <li key={value.id}>\\n           <Form.Field name={`contacts[${idx}].name`} />\\n\\n           <button onClick={() => arrayHelpers.remove(value)}>\\n             Remove\\n           </button>\\n         </li>\\n       )}\\n    </ul>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"options","description":null,"examples":null,"type":{"typeDef":null,"name":"UseFieldArrayOptions","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null},{"name":"name","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A field path, should point to an array value in the form data\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":null,"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"T","typeDef___NODE":null}]},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"FieldArrayHelpers","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"T","typeDef___NODE":null}]},{"type":"NameExpression","name":"FieldMeta","typeDef___NODE":null}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"55399b22-e38d-5a27-b620-db5572421709","exampleId":"06bf0070-1fd5-58fc-b3a2-cb4d1cbe2c1b"}}}