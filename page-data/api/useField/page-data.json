{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useField","result":{"data":{"docpocalypse":{"id":"2e4644cf-6326-5417-8232-fce2fcd4b0ab","name":"useField","importName":"import { useField } from 'react-formal'","example":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \" hook is an alternative to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Field\"), \" component. It\\ncan used to create custom Field components or encapsulate thorny logic.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"function MyField({ name }) {\\n  const [props, meta] = useField(name);\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \" will return a props object you can pass to an input component. Note\\nthat \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \" makes a best guess at constructing props for the input likely\\nto receive them. It takes hints from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" as well as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"as\"), \" options to build\\nprops specific to the required input.\"), mdx(\"p\", null, \"For instance, consider a checkbox field:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"// formData = { isCool: true }\\n\\nfunction IsCoolField() {\\n  const [props, meta] = useField({\\n    name: 'isCool',\\n    type: 'checkbox',\\n  });\\n\\n  return <input {...props} />;\\n}\\n\")), mdx(\"p\", null, \"To accommodate the checkbox input, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"props\"), \" here contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked: true\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value: undefined\"), \", since the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" value from the from needs to be passed to the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked\"), \" attribute of the input. You can often even leave out the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" and React\\nFormal will try and infer the type from the schema:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"const schema = object({\\n  isCool: yup.boolean(),\\n});\\n// ...\\n\\nfunction IsCoolField() {\\n  const [props, meta] = useField('isCool');\\n\\n  // still has checked: true\\n  return <input {...props} />;\\n}\\n\")), mdx(\"p\", null, \"This also works for more complex examples like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<select>\"), \"s associated with arrays:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"const schema = object({\\n  colors: yup.array(),\\n});\\n// ...\\n\\nfunction ColorsField({ children }) {\\n  const [props, meta] = useField('colors');\\n\\n  // <select multiple>\\n  return <select {...props}>{children}</select>;\\n}\\n\")), mdx(\"p\", null, \"As with before you can override the inferred behavior by explicitly passing\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" and/or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"as\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \". For non-native input \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"as\"), \" values React Formal will\\nnot infer any specfic props, instead passing just \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onBlur\"), \".\\nDetails about the inferred types and inputs are always available on the field \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"meta\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"signatures":[{"kind":"function","name":"useField","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a new form field for the provided name, takes the same options\\nas \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Field\"), \" props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function MyNameField(props) {\\n  const [fieldProps, meta] = useField('firstName')\\n\\n  return (\\n     <input\\n       {...fieldProps}\\n       className={meta.invalid ? 'field-error' : ''}\\n     />\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"name","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Field name, which should be path corresponding to a specific form \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" path.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":"string","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"UseFieldProps","typeDef___NODE":null},{"type":"NameExpression","name":"FieldMeta","typeDef___NODE":null}],"expression":null,"applications":null}}],"members":{"static":null}},{"kind":"function","name":"useField","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a new form field for the provided name, takes the same options\\nas \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Field\"), \" props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function MyNameField(props) {\\n  const [fieldProps, meta] = useField({ name: 'firstName' })\\n\\n  return (\\n     <input\\n       {...fieldProps}\\n       className={meta.invalid ? 'field-error' : ''}\\n     />\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"options","description":null,"examples":null,"type":{"typeDef":null,"name":"UseFieldOptions","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":[{"name":"name","examples":null,"type":{"typeDef":null,"name":"string","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Field name, which should be path corresponding to a specific form \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" path.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"returns":null,"members":null},{"name":"value","examples":null,"type":{"typeDef":null,"name":"any","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":true,"params":null,"properties":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For checkbox/boolean fields override the HTML default value for checks from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"'on'\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"returns":null,"members":null},{"name":"mapToValue","examples":null,"type":{"typeDef":null,"name":"MapToValue","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":true,"params":null,"properties":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A mapper from the form value to fieldProps.value\", \"`\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"returns":null,"members":null},{"name":"mapFromValue","examples":null,"type":{"typeDef":null,"name":null,"type":"UnionType","elements":[{"type":"NameExpression","name":"string","typeDef___NODE":null},{"type":"NameExpression","name":"MapFromValue","typeDef___NODE":null}],"expression":null,"applications":null},"optional":true,"params":null,"properties":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A mapper from the form value to fieldProps.value\", \"`\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"returns":null,"members":null},{"name":"validates","examples":null,"type":{"typeDef":null,"name":null,"type":"UnionType","elements":[{"type":"NameExpression","name":"string","typeDef___NODE":null},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"string","typeDef___NODE":null}]},{"type":"NullLiteral"}],"expression":null,"applications":null},"optional":true,"params":null,"properties":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Triggers validation for additional field paths\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"returns":null,"members":null}],"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"UseFieldProps","typeDef___NODE":null},{"type":"NameExpression","name":"FieldMeta","typeDef___NODE":null}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"2e4644cf-6326-5417-8232-fce2fcd4b0ab","exampleId":"b6541bf4-5cde-5e03-a97d-35749d031354"}}}