{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A specialized `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"Form.Field\"), ` component that handles array fields.\nSpecifically it handles errors correctly when items are added, removed, or\nreordered.`));\n});"}},"metadata":{"displayName":"Form","doclets":{},"composes":null,"parent":{"__typename":"File","sourceInstanceName":"source"},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Form component renders a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` to be updated and validated by child Fields.\nForms can be thought of as `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"<input/>\"), `s for complex values, or models. A Form aggregates\na bunch of smaller inputs, each in charge of updating a small part of the overall model.\nThe Form will integrate and validate each change and fire a single unified `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"onChange\"), ` with the new `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Validation errors can be displayed anywhere inside a Form with Message Components.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"jsx \"\n  }, React.createElement(\"pre\", {\n    className: \"language-jsx \"\n  }, React.createElement(\"code\", {\n    className: \"language-jsx \"\n  }, \"var defaultStr = yup.string().default('')\", \"\\n\", \"\\n\", \"var customerSchema = yup\", \"\\n\", \"  \", \".object(\", \"{\", \"\\n\", \"    \", \"name: yup.object(\", \"{\", \"\\n\", \"      \", \"first: defaultStr\", \"\\n\", \"        \", \".required('please enter a first name'),\", \"\\n\", \"\\n\", \"      \", \"last: defaultStr\", \"\\n\", \"        \", \".required('please enter a surname'),\", \"\\n\", \"    \", \"}\", \"),\", \"\\n\", \"\\n\", \"    \", \"dateOfBirth: yup.date()\", \"\\n\", \"      \", \".max(new Date(), \\\"Are you a time traveler?!\\\"),\", \"\\n\", \"\\n\", \"    \", \"colorId: yup.number()\", \"\\n\", \"      \", \".nullable()\", \"\\n\", \"      \", \".required('Please select a dank color')\", \"\\n\", \"  \", \"}\", \");\", \"\\n\", \"\\n\", \"render(\", \"\\n\", \"  \", \"<Form\", \"\\n\", \"    \", \"schema=\", \"{\", \"customerSchema\", \"}\", \"\\n\", \"    \", \"defaultValue=\", \"{\", \"customerSchema.default()\", \"}\", \"\\n\", \"  \", \">\", \"\\n\", \"    \", \"<div>\", \"\\n\", \"      \", \"{\", \"\\\\/\\\\*'grandchildren' are no problem \\\\*\\\\/\", \"}\", \"\\n\", \"      \", \"<label>Name</label>\", \"\\n\", \"\\n\", \"      \", \"<Form.Field\", \"\\n\", \"        \", \"name='name.first'\", \"\\n\", \"        \", \"placeholder='First name'\", \"\\n\", \"      \", \"/>\", \"\\n\", \"      \", \"<Form.Field\", \"\\n\", \"        \", \"name='name.last'\", \"\\n\", \"        \", \"placeholder='Surname'\", \"\\n\", \"      \", \"/>\", \"\\n\", \"\\n\", \"      \", \"<Form.Message for=\", \"{\", \"['name.first', 'name.last']\", \"}\", \"/>\", \"\\n\", \"    \", \"</div>\", \"\\n\", \"\\n\", \"    \", \"<label>Date of Birth</label>\", \"\\n\", \"    \", \"<Form.Field name='dateOfBirth'/>\", \"\\n\", \"    \", \"<Form.Message for='dateOfBirth'/>\", \"\\n\", \"\\n\", \"    \", \"<label>Favorite Color</label>\", \"\\n\", \"    \", \"<Form.Field name='colorId' as='select'>\", \"\\n\", \"      \", \"<option value=\", \"{\", \"null\", \"}\", \">Select a color...</option>\", \"\\n\", \"      \", \"<option value=\", \"{\", \"0\", \"}\", \">Red</option>\", \"\\n\", \"      \", \"<option value=\", \"{\", \"1\", \"}\", \">Yellow</option>\", \"\\n\", \"      \", \"<option value=\", \"{\", \"2\", \"}\", \">Blue</option>\", \"\\n\", \"      \", \"<option value=\", \"{\", \"3\", \"}\", \">other</option>\", \"\\n\", \"    \", \"</Form.Field>\", \"\\n\", \"    \", \"<Form.Message for='colorId'/>\", \"\\n\", \"\\n\", \"  \", \"<Form.Submit type='submit'>\", \"\\n\", \"    \", \"Submit\", \"\\n\", \"  \", \"</Form.Submit>\", \"\\n\", \"</Form>)\"))));\n});"}}},"props":[{"name":"value","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Form value object, can be left `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/controllables\"\n    }\n  }, `uncontrolled`), `;\nuse the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"defaultValue\"), ` prop to initialize an uncontrolled form.`));\n});"}}},"required":false,"type":{"name":"object","value":null,"raw":null}},{"name":"onChange","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is called when the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` prop changes.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"\\n\", \"  \", \"value\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" object\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"  \", \"updatedPaths\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" array\", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"<\"), \"string\", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \">\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\")))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"errors","doclets":{},"defaultValue":{"value":"ErrorUtils.EMPTY_ERRORS","computed":true},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `An object hash of field errors for the form. The object should be keyed with paths\nwith the values being an array of errors or message objects. Errors can be\nleft `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/controllables\"\n    }\n  }, `uncontrolled`), ` (use `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"defaultErrors\"), ` to set an initial value)\nor managed along with the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"onError\"), ` callback. You can use any object shape you'd like for\nerrors, as long as you provide the Form.Message component an `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"extract\"), ` prop that\nunderstands how to pull out the strings message. By default it understands strings and objects\nwith a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"'message'\"), ` property.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"<\"), \"Form errors\", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"\\\"name.first\\\"\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"\\n\", \"   \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'First names are required'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"   \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"   \", \"\\t\", \"message\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"\\\"Names must be at least 2 characters long\\\"\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"   \", \"\\t\", \"type\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'min'\"), \"\\n\", \"   \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"/\"), React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \">\")))));\n});"}}},"required":false,"type":{"name":"object","value":null,"raw":null}},{"name":"onError","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is called when a validation error occurs. It is called with an `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"errors\"), ` object`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"jsx \"\n  }, React.createElement(\"pre\", {\n    className: \"language-jsx \"\n  }, React.createElement(\"code\", {\n    className: \"language-jsx \"\n  }, \"<Form schema=\", \"{\", \"modelSchema\", \"}\", \"\\n\", \"  \", \"defaultValue=\", \"{\", \"modelSchema.default()\", \"}\", \"\\n\", \"  \", \"errors=\", \"{\", \"this.state ? this.state.errors : \", \"{\", \"}\", \"}\", \"\\n\", \"  \", \"onError=\", \"{\", \"errors => \", \"{\", \"\\n\", \"    \", \"if( errors.dateOfBirth )\", \"\\n\", \"      \", \"errors.dateOfBirth = 'hijacked!'\", \"\\n\", \"    \", \"this.setState(\", \"{\", \" errors \", \"}\", \")\", \"\\n\", \"  \", \"}\", \"}\", \">\", \"\\n\", \"\\n\", \"  \", \"<Form.Field name='dateOfBirth'/>\", \"\\n\", \"  \", \"<Form.Message for='dateOfBirth'/>\", \"\\n\", \"\\n\", \"  \", \"<Form.Submit type='submit'>Submit</Form.Submit>\", \"\\n\", \"</Form>\"))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onValidate","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is called whenever a validation is triggered.\nIt is called `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `before`), ` the validation is actually run.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"onValidate\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"event\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"let\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" type\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" fields\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" args \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" event\", \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onBeforeSubmit","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is fired in response to a submit, _before validation runs.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"onSubmit\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"formValue\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// do something with valid value\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onSubmit","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is fired in response to a submit, after validation runs for the entire form.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"onSubmit\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"formValue\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// do something with valid value\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onSubmitFinished","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"submitForm","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onInvalidSubmit","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Callback that is fired when the native onSubmit event is triggered. Only relevant when\nthe `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"component\"), ` prop renders a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"<form/>\"), ` tag. onInvalidSubmit will trigger only if the form is invalid.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"onInvalidSubmit\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"errors\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// do something with errors\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"getter","doclets":{},"defaultValue":{"value":"(path, model) =>\n  path ? expr.getter(path, true)(model || {}) : model","computed":false},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A value getter function. `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"getter\"), ` is called with `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"path\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` and\nshould return the plain `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `javascript`), ` value at the path.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"\\n\", \" path\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" string\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \" value\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" any\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"-\"), React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \">\"), \" object\"))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"setter","doclets":{},"defaultValue":{"value":"BindingContext.defaultProps.setter","computed":true},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A value setter function. `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"setter\"), ` is called with `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"path\"), `, the form `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` and the path `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), `.\nThe `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"setter\"), ` must return updated form `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), `, which allows you to leave the original value unmutated.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The default implementation uses the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://facebook.github.io/react/docs/update.html\"\n    }\n  }, `react immutability helpers`), `,\nletting you treat the form `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` as immutable.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, React.createElement(\"pre\", {\n    className: \"language-js\"\n  }, React.createElement(\"code\", {\n    className: \"language-js\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"\\n\", \" path\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" string\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \" formValue\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" object\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \" pathValue\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" any\", \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"-\"), React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \">\"), \" object\"))));\n});"}}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"delay","doclets":{},"defaultValue":{"value":"300","computed":false},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Time in milliseconds that validations should be debounced. Reduces the amount of validation calls\nmade at the expense of a slight delay. Helpful for performance.`));\n});"}}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"strict","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Validations will be strict, making no attempt to coarce input values to the appropriate type.`));\n});"}}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"noValidate","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Turns off input validation for the Form, value updates will continue to work.`));\n});"}}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'form'","computed":false},"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A tag name or Component class the Form should render.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"null\"), ` are `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"false\"), ` the form will simply render it's child. In\nthis instance there must only be one child.`));\n});"}}},"required":false,"type":{"name":"union","value":[{"name":"custom","raw":"elementType"},{"name":"enum","value":[{"value":"null","computed":false},{"value":"false","computed":false}]}],"raw":null}},{"name":"schema","doclets":{"type":"{YupSchema}"},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A Yup schema  that validates the Form `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` prop. Used to validate the form input values\nFor more information about the yup api check out: `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/jquense/yup/blob/master/README.md\"\n    }\n  }, `https://github.com/jquense/yup/blob/master/README.md`)));\n});"}}},"required":false,"type":{"name":"YupSchema","value":null,"raw":"function(props, name, componentName, ...args) {\n  var err =\n    !props.noValidate &&\n    PropTypes.any.isRequired(props, name, componentName, ...args)\n\n  if (props[name]) {\n    let schema = props[name]\n    if (!schema.__isYupSchema__ && !(schema.resolve && schema.validate))\n      err = new Error(\n        '`schema` must be a proper yup schema: (' + componentName + ')'\n      )\n  }\n\n  return err\n}"}},{"name":"context","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `yup schema context`));\n});"}}},"required":false,"type":{"name":"object","value":null,"raw":null}},{"name":"debug","doclets":{},"defaultValue":null,"description":{"childMdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `toggle debug mode, which `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"console.warn\"), `s validation errors`));\n});"}}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"touched","doclets":{},"defaultValue":{"value":"{}","computed":false},"description":null,"required":false,"type":null}]}},"pageContext":{"displayName":"Form"}}